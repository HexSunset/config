# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $Terminal kitty
set $Editor emacsclient -c -a emacs

set $TimeStamp $(date +%F_%H%M%S)

# Font for window titles. Will also be used by the bar unless a different font
font pango:terminus 8

# Set window borders
new_window pixel 3
new_float normal

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec xrandr --output HDMI-0 --primary
exec xrandr --output DVI-D-0 --right-of HDMI-0
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock -c 000000 --nofork
exec --no-startup-id xss-lock i3lock -c 000000 --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet

# Chinese input
exec --no-startup-id fcitx5 -d

# Hide mouse pointer when typing
#exec --no-startup-id xbanish

# Enable touchpad tap to click
exec xinput set-prop "MSFT0001:00 06CB:CE2D Touchpad" "libinput Tapping Enabled" 1

# Set layout + nocaps option
exec setxkbmap -option ctrl:nocaps ee us 

# Set wallpaper
exec feh --bg-scale $HOME/.config/wallpapers/arch-black-4k.png

# Start picom compositor
exec --no-startup-id picom --config $HOME/.config/picom/picom.conf -b

# Start dunst notification manager
exec --no-startup-id dunst

# Use pactl to adjust volume in PulseAudio.
bindsym $mod+plus exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% 
bindsym $mod+minus exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% 
bindsym $mod+M exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle 
bindsym $mod+Shift+M exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle 

bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% 
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Monitor brightness
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl s +10%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl s 10%-

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $Terminal

# start a text editor
bindsym $mod+n exec $Editor

# start browser
bindsym $mod+b exec firefox
bindsym $mod+Shift+b exec tor-browser

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id rofi -show drun

# swap between windows
bindsym $mod+Tab exec --no-startup-id rofi -show window

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle
set $refresh_i3status killall -SIGUSR1 i3status

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $refresh_i3status killall -SIGUSR1 i3status
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

workspace $ws1 output primary
workspace $ws2 output primary
workspace $ws3 output primary
workspace $ws4 output primary

workspace $ws5 output DVI-D-0
workspace $ws6 output DVI-D-0
workspace $ws7 output DVI-D-0
workspace $ws8 output DVI-D-0

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4

bindsym $mod+u workspace $ws5
bindsym $mod+i workspace $ws6
bindsym $mod+o workspace $ws7
bindsym $mod+p workspace $ws8

#bindsym $mod+9 workspace $ws9
#bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4

bindsym $mod+Shift+u move container to workspace $ws5
bindsym $mod+Shift+i move container to workspace $ws6
bindsym $mod+Shift+o move container to workspace $ws7
bindsym $mod+Shift+p move container to workspace $ws8

#bindsym $mod+Shift+9 move container to workspace $ws9
#bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+c reload

# open config folder
bindsym $mod+Shift+c exec $Editor ~/.config/

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# Exit dialogue
bindsym $mod+Shift+e exec --no-startup-id rofi -show menu -modi menu:$HOME/.config/rofi/rofi-power-menu

# Desktop screenshot
bindsym --release Print exec maim -u | tee ~/Pictures/screenshots/$TimeStamp.png | xclip -selection clipboard -t image/png

# Active window screenshot
bindsym --release Shift+Print exec maim -u -i $(xdotool getactivewindow) | tee ~/Pictures/screenshots/$(date +%F_%H%M%S).png | xclip -selection clipboard -t image/png

# OSX-like area selection screenshots
bindsym --release $mod+Shift+s exec maim -u -D -s | tee ~/Pictures/screenshots/$(date +%F_%H%M%S).png | xclip -selection clipboard -t image/png

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        bindsym n resize shrink width 10 px or 10 ppt 
        bindsym w resize grow width 10 px or 10 ppt
        bindsym t resize grow height 10 px or 10 ppt
        bindsym s resize shrink height 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or Mod1+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Launch bar
exec_always --no-startup-id ~/.config/polybar/launch.sh
